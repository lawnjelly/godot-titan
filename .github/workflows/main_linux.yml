# This workflow creates Godot 3.x with added third party modules

name: Main Linux

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [workflow_dispatch]

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.x
  SCONS_CACHE_LIMIT: 4096

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: "ubuntu-18.04"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
      with:
        repository: lawnjelly/godot
        ref: titan

    - name: Show folders before
      run: pwd && whoami && ls -R && ls misc

    #- uses: actions/checkout@v2
      
      # Azure repositories are not reliable, we need to prevent azure giving us packages.
    - name: Make apt sources.list use the default Ubuntu repositories
      run: |
        #sudo cp -f misc/ci/sources.list /etc/apt/sources.list
        sudo apt-get update
        
    # Install all packages (except scons)
    - name: Configure dependencies
      run: |
        sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
          libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm
        
    # Upload cache on completion and check it out now
    - name: Load .scons_cache directory
      id: linux-editor-cache
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/.scons_cache/
        key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
        restore-keys: |
          ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
          ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

    # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        # Semantic version range syntax or exact version of a Python version
        python-version: '3.x'
        # Optional - x64 or x86 architecture, defaults to x64
        architecture: 'x64'

    # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
    - name: Configuring Python packages
      run: |
        python -c "import sys; print(sys.version)"
        python -m pip install scons
        python --version
        scons --version
        
    # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
    - name: Compilation
      env:
        SCONS_CACHE: ${{github.workspace}}/.scons_cache/
      run: |
        scons -j2 verbose=no warnings=moderate werror=no platform=x11 tools=yes tests=no target=release_debug
        strip bin/godot.x11.opt.tools.64
                
    - name: Show folders after
      run: pwd && whoami && ls -R
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: godot-titan-linux-editor (x64)
        path: bin/godot.x11.opt.tools.64
